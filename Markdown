Week 4 Answers 
question 1
MariaDB [flight_game]> SELECT 'Finland' AS `country name`, name AS `airport name`
    -> FROM airport
    -> WHERE iso_country = 'FI' AND scheduled_service = 'yes';
+--------------+-----------------------------+
| country name | airport name                |
+--------------+-----------------------------+
| Finland      | Enontekio Airport           |
| Finland      | Helsinki Vantaa Airport     |
| Finland      | Ivalo Airport               |
| Finland      | Joensuu Airport             |
| Finland      | Jyv?skyl? Airport           |
| Finland      | Kemi-Tornio Airport         |
| Finland      | Kajaani Airport             |
| Finland      | Kokkola-Pietarsaari Airport |
| Finland      | Kuusamo Airport             |
| Finland      | Kittil? Airport             |
| Finland      | Kuopio Airport              |
| Finland      | Lappeenranta Airport        |
| Finland      | Mariehamn Airport           |
| Finland      | Oulu Airport                |
| Finland      | Pori Airport                |
| Finland      | Rovaniemi Airport           |
| Finland      | Savonlinna Airport          |
| Finland      | Sein?joki Airport           |
| Finland      | Tampere-Pirkkala Airport    |
| Finland      | Turku Airport               |
| Finland      | Vaasa Airport               |
| Finland      | Varkaus Airport             |
+--------------+-----------------------------+
22 rows in set (0.016 sec)

question 2
MariaDB [flight_game]> SELECT g.screen_name, g.location, a.name
    -> FROM game g
    -> JOIN airport a ON g.location = a.ident
    -> LIMIT 5;
+-------------+----------+-------------------------+
| screen_name | location | name                    |
+-------------+----------+-------------------------+
| Heini       | EFHK     | Helsinki Vantaa Airport |
| Vesa        | EGCC     | Manchester Airport      |
| Ilkka       | EGKK     | London Gatwick Airport  |
+-------------+----------+-------------------------+
3 rows in set (0.001 sec)

MariaDB [flight_game]> SELECT g.screen_name, c.name AS `name`
    -> FROM game g
    -> JOIN airport a ON g.location = a.ident
    -> JOIN country c ON a.iso_country = c.iso_country;

Question 3
+-------------+----------------+
| screen_name | name           |
+-------------+----------------+
| Heini       | Finland        |
| Vesa        | United Kingdom |
| Ilkka       | United Kingdom |
+-------------+----------------+
3 rows in set (0.008 sec)

Question 4
MariaDB [flight_game]> SELECT a.name AS `name`, g.screen_name AS `screen_name`
    -> FROM airport a
    -> LEFT JOIN game g ON a.ident = g.location
    -> WHERE a.name LIKE '%Hels%';
+---------------------------------------+-------------+
| name                                  | screen_name |
+---------------------------------------+-------------+
| Winchelsea Airport                    | NULL        |
| Reichelsheim Airport                  | NULL        |
| Flugplatz Michelstadt/Odenwald        | NULL        |
| Helsinki Malmi Airport                | NULL        |
| Helsinki Vantaa Airport               | Heini       |
| Helsinki East-Redstone Airport        | NULL        |
| ?ngelholm-Helsingborg Airport         | NULL        |
| Shelsley-Beauchamp Airstrip           | NULL        |
| Michels Avia??o Agr?cola LTDA Airport | NULL        |
| Michels Farms Airport                 | NULL        |
+---------------------------------------+-------------+
10 rows in set (0.048 sec)


Ex 5:
Question 1
MariaDB [flight_game]> SELECT 'Japan' AS Country
    -> WHERE 'Satsuma' LIKE 'Satsuma%';
+---------+
| Country |
+---------+
| Japan   |
+---------+
1 row in set (0.013 sec)

Question 2
MariaDB [flight_game]> SELECT name
    -> FROM airport
    -> WHERE iso_country = 'MC';
+----------------------------------+
| name                             |
+----------------------------------+
| Monaco Heliport                  |
| Terre-Plein du Larvotto Heliport |
| Princess Grace Hospital Helipad  |
+----------------------------------+
3 rows in set (0.001 sec)

MariaDB [flight_game]>

Question 3
MariaDB [flight_game]> SELECT screen_name
    -> FROM game
    -> WHERE screen_name IN ('Heini', 'Ilkka');
+-------------+
| screen_name |
+-------------+
| Heini       |
| Ilkka       |
+-------------+
2 rows in set (0.012 sec)

Question 4 
MariaDB [flight_game]> select country.name
    -> from country
    -> where iso_country not in
    -> (select airport.iso_country
    -> from airport);
+-------------------------------+
| name                          |
+-------------------------------+
| Pitcairn                      |
| Tokelau                       |
| Unknown or unassigned country |
+-------------------------------+
3 rows in set (0.001 sec)

Question 5
	
select name
from goal
where id not in(
select goal.id
from goal, goal_reached, game
where game.id = game_id and goal.id = goal_id and screen_name = "Heini"
);


Week 5 
1.
MariaDB [flight_game]> select elevation_ft from airport where elevation_ft in (select max(elevation_ft) from air
port);
+--------------+
| elevation_ft |
+--------------+
|        22000 |
+--------------+
1 row in set (0.069 sec)

2.MariaDB [flight_game]> select continent, count(*) from country group by continent;
+-----------+----------+
| continent | count(*) |
+-----------+----------+
| AF        |       59 |
| AN        |        3 |
| AS        |       54 |
| EU        |       50 |
| NA        |       41 |
| OC        |       27 |
| SA        |       14 |
+-----------+----------+
7 rows in set (0.012 sec)

4.MariaDB [flight_game]> select screen_name from game where co2_consumed in (select min(co2_consumed) from game);
+-------------+
| screen_name |
+-------------+
| Heini       |
+-------------+
1 row in set (0.001 sec)
5.MariaDB [flight_game]> select country.name, count(*)
    -> from airport, country
    -> where airport.iso_country = country.iso_country
    -> group by country.iso_country
    -> order by count(*) desc
    -> limit 50;
+----------------------+----------+
| name                 | count(*) |
+----------------------+----------+
| United States        |    28685 |
| Brazil               |     6132 |
| Japan                |     3110 |
| Canada               |     2878 |
| Australia            |     2242 |
| Mexico               |     2089 |
| Russia               |     1416 |
| South Korea          |     1393 |
| United Kingdom       |     1346 |
| Germany              |      977 |
| France               |      964 |
| Argentina            |      937 |
| Italy                |      829 |
| Colombia             |      714 |
| Papua New Guinea     |      601 |
| Venezuela            |      600 |
| Philippines          |      593 |
| China                |      588 |
| South Africa         |      581 |
| India                |      547 |
| Indonesia            |      510 |
| Chile                |      504 |
| Spain                |      473 |
| Kenya                |      375 |
| Poland               |      327 |
| Congo (Kinshasa)     |      292 |
| Czech Republic       |      292 |
| Namibia              |      258 |
| Norway               |      251 |
| Sweden               |      244 |
| Ukraine              |      239 |
| Turkey               |      237 |
| United Arab Emirates |      223 |
| Portugal             |      221 |
| New Zealand          |      212 |
| Tanzania             |      210 |
| Iran                 |      204 |
| Bolivia              |      200 |
| Per?                 |      185 |
| Uzbekistan           |      178 |
| Belgium              |      177 |
| Pakistan             |      173 |
| Kazakhstan           |      173 |
| Honduras             |      159 |
| Zimbabwe             |      155 |
| Bulgaria             |      151 |
| Austria              |      147 |
| Cuba                 |      143 |
| Botswana             |      134 |
| Costa Rica           |      134 |
+----------------------+----------+
50 rows in set (0.027 sec)
6.MariaDB [flight_game]> select country.name
    -> from airport, country
    -> where airport.iso_country = country.iso_country
    -> group by country.iso_country
    -> having count(*) > 1000;
+----------------+
| name           |
+----------------+
| Australia      |
| Brazil         |
| Canada         |
| United Kingdom |
| Japan          |
| South Korea    |
| Mexico         |
| Russia         |
| United States  |
+----------------+
9 rows in set (0.019 sec)
7.MariaDB [flight_game]> SELECT name
    -> FROM airport
    -> WHERE elevation_ft = (SELECT MAX(elevation_ft) FROM airport);
+-----------------------------+
| name                        |
+-----------------------------+
| Siachen Glacier AFS Airport |
+-----------------------------+
1 row in set (0.024 sec)
8.MariaDB [flight_game]> select name
    -> from country
    -> where iso_country in (
    -> select iso_country
    -> from airport
    -> where elevation_ft in(
    -> select max(elevation_ft)
    -> from airport
    -> )
    -> );
+-------+
| name  |
+-------+
| India |
+-------+
1 row in set (0.027 sec)
10.
MariaDB [flight_game]> select name
    -> from airport
    -> where latitude_deg in(
    -> select min(latitude_deg)
    -> from airport
    -> );
+----------------------------+
| name                       |
+----------------------------+
| South Pole Station Airport |
+----------------------------+
1 row in set (0.026 sec)

Next question set 
1.MariaDB [flight_game]> update game
    -> set  location = (select ident from airport where name = "Nottingham Airport"), co2_consumed = co2_consumed+500
    -> where screen_name = "Vesa";
Query OK, 1 row affected (0.033 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [flight_game]>
MariaDB [flight_game]> select * from game;
+----+--------------+------------+----------+-------------+
| id | co2_consumed | co2_budget | location | screen_name |
+----+--------------+------------+----------+-------------+
| 1  |         2000 |      10000 | EFHK     | Heini       |
| 2  |         3500 |      10000 | EGBN     | Vesa        |
| 3  |         8000 |      10000 | EGKK     | Ilkka       |
+----+--------------+------------+----------+-------------+
3 rows in set (0.000 sec)
3.
MariaDB [flight_game]> DELETE FROM goal_reached;
Query OK, 4 rows affected (0.002 sec)
4.MariaDB [flight_game]> DELETE FROM goal_reached;
Query OK, 4 rows affected (0.002 sec)

MariaDB [flight_game]> DELETE FROM game;
Query OK, 3 rows affected (0.012 sec)
